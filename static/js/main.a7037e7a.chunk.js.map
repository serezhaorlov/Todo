{"version":3,"sources":["components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/AppHeader/AppHeader.js","components/SearchInput/SearchInput.js","components/StatusFilter/StatusFilter.js","components/ItemAddForm/ItemAddForm.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["TodoListItem","item","onDelete","changeTodoItem","label","done","important","id","style","color","fontWeight","className","onClick","type","TodoList","todoData","elements","map","AppHeader","todo","SearchInput","setTerm","term","placeholder","value","onChange","e","target","StatusFilter","filter","onFilterChange","button","name","buttonClass","ItemAddForm","onAdd","React","useState","setLabel","onSubmit","length","preventDefault","console","log","ID","App","items","text","createItem","todosData","setTodosData","setFilter","visibleItems","filtered","toLowerCase","indexOf","doneCount","el","todoCount","index","findIndex","newTodosData","slice","propValue","propName","oldItem","newItem","newArray","newTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7037e7a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TodoListItem ( { item, onDelete, changeTodoItem,  } ) {\r\n    const {label, done, important, id} = item; //деструктурирую item для наглядности\r\n    \r\n    const isCaseDone = () => {\r\n        changeTodoItem( !done, 'done', id) //прокидываю в App в функцию аргументы для изменения массива карточек\r\n    }\r\n\r\n    const isCaseImportant = () => {\r\n        changeTodoItem( !important, 'important', id) //прокидываю в App в функцию аргументы для изменения массива карточек\r\n    }\r\n\r\n    const style = { \r\n        color: important ? 'steelblue' : 'black',\r\n        fontWeight: important ? 'bold' : 'normal'\r\n    }\r\n    \r\n    const doned = `todo__list-item todo__list-item_done`\r\n    const undone = `todo__list-item`\r\n\r\n    return (\r\n        <div className=\"todo__container todo__container_li \">\r\n            <span className={ done ? doned : undone } style={style} onClick={ isCaseDone }>{ label }</span>\r\n            <div className=\"todo__container\">\r\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right todo__list-item-button\" onClick={ isCaseImportant }>\r\n                    <i className=\"fa fa-exclamation\"/>\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right todo__list-item-button\" onClick={ onDelete }>\r\n                    <i className=\"fa fa-trash-o\"/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoListItem;\r\n\r\n\r\n/*     let classNames = 'todo__list-item';\r\n    if (isDone) {\r\n      classNames += ' todo__list-item_done';\r\n    }\r\n\r\n    if (isImportant) {\r\n      classNames += ' important';\r\n    } */","import React from 'react';\r\nimport TodoListItem from '../TodoListItem/TodoListItem'\r\n\r\n\r\nfunction TodoList ( { todoData, onDelete, changeTodoItem}) {\r\n    \r\n    const elements = todoData.map((item) => { //раскладывается на новый массив замещая старый с новыми id\r\n\r\n        return (\r\n            <li key={item.id} className=\"list-group-item todo__list-item\">\r\n                <TodoListItem item={ item }  /* прокидываю итем для того, чтобы взять lable, id, и состояния done/important для передачи в changeTodoItem*/\r\n                    onDelete = { () => onDelete(item.id) } \r\n                    changeTodoItem = { changeTodoItem } /* прокидываю функцию в итем */\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className=\"list-group todo__list \">\r\n            { elements }\r\n        </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nfunction AppHeader ({todo, done}) {\r\n    return (\r\n        <div className=\"todo__container todo__container_header\">\r\n            <h1 className=\"todo__title\">Todo List</h1>\r\n            <p className=\"todo__counter\">{todo} more to do, {done} done</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nfunction SearchInput ({ setTerm, term }) {\r\n\r\n    const searchChange = (e) => {\r\n        setTerm(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <input className=\"form-control todo__input \" placeholder=\"Search\" value={ term } onChange={ searchChange }></input>\r\n    )\r\n}\r\n\r\nexport default SearchInput;","import React from 'react';\r\n\r\nfunction StatusFilter ({ filter, onFilterChange }) {\r\n\r\n    const buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ]\r\n\r\n    const button = buttons.map(({name, label}) => {\r\n        const isActive = filter === name;\r\n        const buttonClass = isActive ? \"btn-info\" : \"btn-outline-secondary\" \r\n        return (\r\n            <button type='button' className={`todo__button btn ${ buttonClass }`} key={ name } onClick={ () => { onFilterChange(name) }} >{ label }</button>\r\n        )\r\n\r\n    })\r\n\r\n    return (\r\n        \r\n        <div className='todo__button-container btn-group'>\r\n            {button}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusFilter;\r\n","import React from 'react';\r\n\r\nfunction ItemAddForm ({ onAdd }) {\r\n\r\n    const [label, setLabel] = React.useState('')\r\n\r\n    const onLabelChange = (e) => {\r\n        setLabel(e.target.value);\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        if (label.length === 0) {\r\n            e.preventDefault();\r\n            return console.log('Please enter something')\r\n        }\r\n        e.preventDefault();\r\n        onAdd(label);\r\n        setLabel('');\r\n    }\r\n\r\n    return (\r\n    <form className=\"todo__container todo__container_add-button\" onSubmit={ onSubmit }>\r\n        <input className=\"todo__input\" placeholder=\"What ToDO?\" onChange={ onLabelChange } value={label}></input> {/* controled element now */}\r\n        <button type=\"submit\" className=\"btn btn-outline-secondary todo__button-add\">Add New Task</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default ItemAddForm;","import React from 'react';\r\n\r\nimport TodoList from '../TodoList/TodoList';\r\nimport AppHeader from '../AppHeader/AppHeader';\r\nimport SearchInput from '../SearchInput/SearchInput';\r\nimport StatusFilter from '../StatusFilter/StatusFilter';\r\nimport ItemAddForm from '../ItemAddForm/ItemAddForm';\r\n\r\nlet ID = 1;\r\n\r\nfunction App() {\r\n  \r\n  const createItem = (label) => {\r\n    return {\r\n      label,\r\n      important: false, \r\n      done: false, \r\n      id: ID++\r\n    }\r\n  }\r\n\r\n  const [todosData, setTodosData] = React.useState([\r\n    createItem(\"Me, myself, and i\"),\r\n    createItem(\"Keep calm and code\"),\r\n    createItem(\"Fly bird, fly\")\r\n\r\n  ]); //\r\n\r\n  const [term, setTerm] = React.useState('')\r\n  const [filter, setFilter] = React.useState('active');\r\n\r\n  const changeTodoItem = ( propValue, propName, id) => { //id 1\r\n    const index = todosData.findIndex((el) => el.id === id); //нахожу индекс карточки в todosData сравнивая id\r\n\r\n    const oldItem = todosData[index]; //выбираю эту карточку в переменную, выбирается карточка с id 1\r\n\r\n    const newItem = { //меняю в старом итеме занчение boolen-ключа done/important в зависимости от того что было щелкнуто в TodoListItem и сохраняю в переменную\r\n      ...oldItem,\r\n      [propName]: propValue, \r\n    };\r\n\r\n    const newArray = [\r\n      ...todosData.slice(0, index), //вставляю вместо старой карточки со старым значением done/important новую карточку, заменяя карточку по index'у \r\n      newItem,\r\n      ...todosData.slice(index + 1), // но оно не заменяется) *feelsbadman*\r\n    ]\r\n  \r\n    setTodosData(newArray)\r\n  }\r\n\r\n  const deleteTodo = (id) => {\r\n      const index = todosData.findIndex((el)=> el.id === id);\r\n\r\n    const newTodosData = [\r\n      ...todosData.slice(0, index), //0 to index\r\n      ...todosData.slice(index + 1) // index to index+1\r\n    ];\r\n\r\n    setTodosData(newTodosData);\r\n\r\n  }\r\n  \r\n  const addTodo = (text) => {\r\n    \r\n    const newTodo = createItem(text)\r\n    const newArray = [ ...todosData, newTodo ];\r\n\r\n    setTodosData(newArray) //\r\n\r\n  }\r\n\r\n  const searchData = (items, text) => {\r\n    if (text.length === 0){\r\n      return items\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(text.toLowerCase()) > -1;\r\n    })\r\n  }\r\n\r\n  const filtered = (items, filter) => {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done)\r\n      case 'done':\r\n        return items.filter((item) => item.done)\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  const visibleItems = filtered( searchData(todosData, term) , filter)\r\n  const doneCount = todosData.filter((el) => el.done).length;\r\n  const todoCount = todosData.length - doneCount;\r\n\r\n  return (\r\n    <section className=\"todo\">\r\n        <AppHeader todo={ todoCount } done={ doneCount }/> {/* счетчик дел */}\r\n      <div className=\"todo__container\">\r\n        <SearchInput setTerm={ setTerm } term={ term }/>\r\n        <StatusFilter filter={ filter } onFilterChange={ setFilter }/>\r\n      </div>\r\n      <TodoList \r\n        todoData={ visibleItems } onDelete={ deleteTodo } \r\n        changeTodoItem = {changeTodoItem}\r\n      />\r\n      <ItemAddForm onAdd={ addTodo } />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n \n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}